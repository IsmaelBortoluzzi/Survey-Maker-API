version: "3.3"

services:
  mongodb:
    container_name: mongodb
    image: mongo:4.2
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongo-compose-network
    ports:
      - ${MONGO_PORT}
    volumes:
      - ./volumes/mongo_data:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express:0.54.0
    restart: always
    depends_on:
      - mongodb
    networks:
      - mongo-compose-network
    environment:
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    ports:
      - ${MONGO_EXPRESS_PORT}
    volumes:
      - ./volumes/mongo_express_data:/data/db

  postgres:
    container_name: postgres
    image: postgres:14.3
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data/

volumes:
  .postgres_data:
  .mongo_data:
  .mongo_express_data:

networks:
  mongo-compose-network:
      driver: bridge